{"ts":1377177880644,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n\n/**\n * DB class for some basic simpilification for PDO mode\n * @author Ervin\n */\nclass db_pdo{\n    /**\n     * clenske promene\n     */\n    protected $user;\n    protected $pass;\n    protected $database;\n    protected $address;\n    protected $db_selected;\n    protected $pdo;\n\n\n    /**\n     * konstruktor\n     */\n    public function __construct($adr=NULL,$usr=NULL,$pass=NULL,$db=NULL) {\n        if($adr==NULL){$this->address=_DB_ADDRESS;}else{$this->address=$adr;}\n        if($usr==NULL){$this->user=_DB_USER;}else{$this->user=$usr;}\n        if($pass==NULL){$this->pass=_DB_PASS;}else{$this->pass=$pass;}\n        if($db==NULL){$this->database=_DB_DATABASE;}else{$this->database=$db;}\n    }\n    \n    /**\n     * metody\n     */\n    \n    public static function makeSafe($str)\n    {\n        return strip_tags(stripcslashes($str));\n    }\n    \n    \n    \n    public function conect(){\n        \n        $this->pdo=new PDO('mysql:host='.$this->address.';dbname='.$this->database.';charset=utf8', $this->user, $this->pass);\n        $this->pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n        \n        if(!is_object($this->pdo)){\n            die(\"Connection to MySQL Database canot be established!\");\n            return false;\n        }\n        else{return $this->pdo;}\n    }\n    \n    public function query($sql,$mode='exec'){\n        \n        if($mode=='select'){\n            try {\n            $result=$this->pdo->query($query);\n            } catch(PDOException $ex) {\n                //error handle\n                log::writeLogEntry('PDO error - '.$ex->getMessage());\n                return FALSE;\n            }   \n        }\n        else{\n            $stmt = $this->pdo->prepare($sql);\n            $stmt->execute();\n            $stmt->closeCursor();\n            return TRUE;\n        }\n        \n        return $result;\n    }\n    \n    public function fetch_array($result){\n        if(is_object($result)){\n            $data= $result->fetch(PDO::FETCH_ASSOC);\n            return $data;\n        }\n        \n        return FALSE;\n    }\n    \n    public function cleanUp($result) {\n        $result->closeCursor();\n        return TRUE;\n    }\n    \n    public function num_rows($result){\n        //disabled\n        return FALSE;\n    }\n}\n\n//end of file db.php\n"]],"start1":0,"start2":0,"length1":0,"length2":2260}]],"length":2260}
